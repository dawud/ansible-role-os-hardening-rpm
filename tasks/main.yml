---
- name: Check for check/audit mode
  command: /bin/true
  register: noop_result
  changed_when: False
  tags:
    - always

- name: Set fact for check_mode
  set_fact:
    check_mode: "{{ noop_result | skipped }}"
  tags:
    - always

- name: Create temporary directory to hold any temporary files
  command: "mktemp -d"
  register: mktemp_result
  changed_when: False
  when:
    - not check_mode | bool
  tags:
    - always

- name: Set a fact for the temporary directory
  set_fact:
    temp_dir: "{{ mktemp_result.stdout }}"
  changed_when: False
  when:
    - not check_mode | bool
  tags:
    - always

# Multiple tasks will need the output of RPM verification, so let's do the
# lookup one time and then grep over the output in subsequent tasks.
- name: Verify all installed RPM packages
  shell: "rpm -Va > {{ temp_dir }}/rpmverify.txt"
  args:
    warn: no
  failed_when: False
  changed_when: False
  register: rpmverify_task
  async: 300
  poll: 0
  when:
    - not check_mode | bool
    - ansible_os_family | lower == 'redhat'
  tags:
    - rpm
    - high
    - V-71855
    - skip_ansible_lint

- name: Ensure RPM verification task has finished
  async_status:
    jid: "{{ rpmverify_task.ansible_job_id }}"
  failed_when: False
  changed_when: False
  register: job_result
  until: job_result.finished
  retries: 30
  when:
    - not rpmverify_task is skipped
  tags:
    - rpm
    - high
    - V-71855

- name: V-71855 - Get files with invalid checksums (rpm)
  shell: "grep '^..5' {{ temp_dir }}/rpmverify.txt | awk '{ print $NF }'"
  register: invalid_checksum_files
  changed_when: False
  when:
    - security_check_package_checksums | bool
    - not check_mode | bool
    - ansible_os_family | lower == 'redhat'
  tags:
    - rpm
    - high
    - V-71855

- name: V-71855 - The cryptographic hash of system files and commands must match vendor values (rpm)
  debug:
    msg: |
      The following files have checksums that differ from the checksum provided
      with their package. Each of these should be verified manually to ensure
      they have not been modified by an unauthorized user.

      {% for filename in invalid_checksum_files.stdout_lines %}
        {{ filename }}
      {% endfor %}
  when:
    - security_check_package_checksums | bool
    - not check_mode | bool
    - ansible_os_family | lower == 'redhat'
    - invalid_checksum_files is defined
    - invalid_checksum_files.stdout is defined
  tags:
    - rpm
    - high
    - V-71855

- name: V-71977 - Require digital signatures for all packages
  lineinfile:
    dest: "{{ pkg_mgr_config }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items: "{{ rpm_gpgchecks | default([]) }}"
  tags:
    - rpm
    - high
    - V-71977
    - V-71979
    - V-71981

- name: V-71987 - Clean requirements/dependencies when removing packages (RedHat)
  lineinfile:
    dest: "{{ pkg_mgr_config }}"
    regexp: "^(#)?clean_requirements_on_remove"
    line: "clean_requirements_on_remove=1"
    state: present
  when:
    - security_package_clean_on_remove | bool
    - ansible_os_family | lower == 'redhat'
  tags:
    - low
    - packages
    - V-71987

- name: V-71849 - Get packages with incorrect file permissions or ownership
  shell: "grep '^.M' {{ temp_dir }}/rpmverify.txt | awk '{ print $NF }'"
  args:
    warn: no
  register: rpmverify_package_list
  changed_when: False
  when:
    - not check_mode | bool
    - ansible_os_family | lower == 'redhat'
    - security_reset_perm_ownership | bool
  tags:
    - file_perms
    - high
    - V-71849

- name: V-71849 - Reset file permissions/ownership to vendor values
  shell: "rpm {{ item[0] }} `rpm -qf {{ item[1] }}`"
  args:
    warn: no
  changed_when: false
  with_nested:
    - ['--setperms', '--setugids']
    - "{{ rpmverify_package_list.stdout_lines | default([]) }}"
  when:
    - not check_mode | bool
    - ansible_os_family | lower == 'redhat'
    - rpmverify_package_list is defined
    - rpmverify_package_list.stdout_lines | length > 0
  async: 300
  poll: 0
  tags:
    - file_perms
    - high
    - V-71849
    # don't trigger ANSIBLE0013
    - skip_ansible_lint

- name: Remove the temporary directory
  file:
    path: "{{ temp_dir }}"
    state: absent
  changed_when: False
  when:
    - not check_mode | bool
  tags:
    - always
